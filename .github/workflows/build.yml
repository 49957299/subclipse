name: Subclipse Build

on:
  pull_request:
    branches: [ master ]

  push:
    branches: [ master ]

  release:
    types: [ published ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
      BINTRAY_TOKEN: ${{ secrets.BINTRAY_TOKEN }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: |
        mvn -B package --file pom.xml
        ARTIFACT_PATHNAME=$(ls ./releng/update-site/target/*.zip | head -n 1)
        ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME .zip)
        echo ARTIFACT_PATHNAME=$ARTIFACT_PATHNAME >> $GITHUB_ENV
        echo ARTIFACT_NAME=$ARTIFACT_NAME >> $GITHUB_ENV

    - name: Archive Update Site
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.ARTIFACT_PATHNAME }}

    - name: Publish Build
      if: github.event_name == 'push'
      run: ./publishBuild.sh subclipse snapshots subclipse master-2020 ./releng/update-site/target/repository

    - name: Publish Release
      if: github.event_name == 'release'
      run: ./publishRelease.sh

    - name: Attach Zipped Site to Release
      uses: actions/upload-release-asset@v1.0.2
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.ARTIFACT_PATHNAME }}
        asset_name: subclipse-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip